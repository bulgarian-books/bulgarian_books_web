schema {
  query: RootQueryType
  mutation: RootMutationType
  subscription: RootSubscriptionType
}

type Author {
  id: ID
  name: String
  nationality: String
}

input AuthorInput {
  name: String!
  nationality: String
}

type Book {
  category: Category
  genre: Genre
  id: ID
  language: Language
  publisher: Publisher
  title: String
}

input BookInput {
  title: String!
}

type Category {
  books: [Book]
  name: String
}

type Genre {
  books: [Book]
  name: String
}

type Language {
  books: [Book]
  name: String
}

type Publisher {
  books: [Book]
  name: String
}

type RootMutationType {
  createAuthor(input: AuthorInput!): Author
  createBook(input: BookInput!): Book
}

type RootQueryType {
  authors: [Author]
  books: [Book]
  categories: [Category]
  genres: [Genre]
  languages: [Language]
  publishers: [Publisher]
}

type RootSubscriptionType {
  newAuthor: Author
  newBook: Book
}

